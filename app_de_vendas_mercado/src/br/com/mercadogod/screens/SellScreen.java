/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.mercadogod.screens;
import java.sql.*;
import br.com.mercadogod.dal.ConnectionModule;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Junior
 */
public class SellScreen extends javax.swing.JInternalFrame {
    DecimalFormat df = new DecimalFormat("###,###.##");
    private final int inverseNum=-1;
    private int quant=1;
    private double valorAtual=0;
    private Connection connection;
    private PreparedStatement pst;
    private ResultSet rs;
    /**
     * Creates new form SellScreen
     */
    public SellScreen() {
        initComponents();
        connection = ConnectionModule.connection();
        search();
        remove_enter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTrocoInsufi = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        txtValInsu = new javax.swing.JLabel();
        txtTotPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtValRec = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtValTroco = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableTemp = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtProdQuant = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnRemoveProd = new javax.swing.JButton();
        btnFinCom = new javax.swing.JButton();
        btnRemoveProds = new javax.swing.JButton();
        btnCli = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        txtName = new javax.swing.JTextField();
        txtFone = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtMsg = new javax.swing.JTextArea();
        Nome = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtIdCli = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        searchCliTable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        txtSearchCli = new javax.swing.JTextField();

        setBackground(new java.awt.Color(102, 102, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("MERCADOGOD - SELL SCREEN");
        setOpaque(true);

        jPanel5.setBackground(new java.awt.Color(153, 153, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtValInsu.setText("|");
        jPanel5.add(txtValInsu, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        txtTotPrice.setEditable(false);
        txtTotPrice.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtTotPrice.setText("0");
        jPanel5.add(txtTotPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 79, 37));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Preço total");
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, -1, -1));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel5.setText("Valor Recebido");
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        txtValRec.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtValRec.setText("0");
        txtValRec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtValRecKeyReleased(evt);
            }
        });
        jPanel5.add(txtValRec, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 79, 40));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel6.setText("TROCO");
        jPanel5.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, -1, -1));

        txtValTroco.setEditable(false);
        txtValTroco.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        txtValTroco.setForeground(new java.awt.Color(0, 102, 204));
        txtValTroco.setText("0");
        jPanel5.add(txtValTroco, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 96, 40));

        jPanel2.setBackground(new java.awt.Color(99, 114, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtSearch.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Pesquisar");

        jPanel1.setBackground(new java.awt.Color(99, 114, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        searchTable.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Produto", "Produto", "Validade", "Quantidade", "Preço"
            }
        ));
        searchTable.setGridColor(new java.awt.Color(255, 255, 255));
        searchTable.setMinimumSize(new java.awt.Dimension(30, 64));
        searchTable.setSelectionBackground(new java.awt.Color(153, 153, 255));
        searchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(searchTable);
        if (searchTable.getColumnModel().getColumnCount() > 0) {
            searchTable.getColumnModel().getColumn(0).setResizable(false);
            searchTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            searchTable.getColumnModel().getColumn(1).setResizable(false);
            searchTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            searchTable.getColumnModel().getColumn(3).setPreferredWidth(20);
            searchTable.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 0, -1, -1));

        jPanel3.setBackground(new java.awt.Color(102, 102, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tableTemp.setBackground(new java.awt.Color(204, 204, 255));
        tableTemp.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));
        tableTemp.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        tableTemp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Quantidade", "Produto", "Preço", "Venda ID"
            }
        ));
        tableTemp.setGridColor(new java.awt.Color(204, 204, 204));
        tableTemp.setRowHeight(20);
        tableTemp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTempMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableTemp);
        if (tableTemp.getColumnModel().getColumnCount() > 0) {
            tableTemp.getColumnModel().getColumn(0).setMinWidth(40);
            tableTemp.getColumnModel().getColumn(0).setPreferredWidth(50);
            tableTemp.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        jPanel4.setBackground(new java.awt.Color(99, 114, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("VENDA ATUAL");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        txtProdQuant.setText("1");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Quantidade produto");

        btnRemoveProd.setBackground(new java.awt.Color(204, 204, 204));
        btnRemoveProd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/mercadogod/icons/delete.png"))); // NOI18N
        btnRemoveProd.setText("Remover produto");
        btnRemoveProd.setBorder(null);
        btnRemoveProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveProdActionPerformed(evt);
            }
        });

        btnFinCom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/mercadogod/icons/create.png"))); // NOI18N
        btnFinCom.setText("Finalizar compra");
        btnFinCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinComActionPerformed(evt);
            }
        });

        btnRemoveProds.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/mercadogod/icons/update.png"))); // NOI18N
        btnRemoveProds.setText("Remover produtos");
        btnRemoveProds.setToolTipText("");
        btnRemoveProds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveProdsActionPerformed(evt);
            }
        });

        btnCli.setText("Cliente");
        btnCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(btnCli)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtProdQuant, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnRemoveProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnRemoveProds, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFinCom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProdQuant, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btnCli))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnRemoveProd, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemoveProds, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(btnFinCom, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76))
        );

        jPanel5.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 0, 390, -1));

        jPanel6.setBackground(new java.awt.Color(163, 163, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 255), null), "Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 18))); // NOI18N
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));

        txtName.setEditable(false);

        txtFone.setEditable(false);

        txtMsg.setEditable(false);
        txtMsg.setColumns(20);
        txtMsg.setRows(5);
        jScrollPane3.setViewportView(txtMsg);

        Nome.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Nome.setText("Nome");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel7.setText("Telefone");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel8.setText("Mensagem");

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel9.setText("ID");

        txtIdCli.setEditable(false);
        txtIdCli.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(Nome)
                            .addComponent(jLabel7))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtFone, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdCli, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(txtIdCli, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Nome))
                .addGap(8, 8, 8)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel5.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 360, 470, 210));

        jPanel8.setBackground(new java.awt.Color(155, 155, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 255), null), "Procurar Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 0, 18))); // NOI18N

        searchCliTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Nome", "Telefone", "Mensagem"
            }
        ));
        searchCliTable.setEnabled(false);
        searchCliTable.setGridColor(new java.awt.Color(255, 255, 255));
        searchCliTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchCliTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(searchCliTable);

        jPanel9.setBackground(new java.awt.Color(157, 157, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 255), null));

        txtSearchCli.setEditable(false);
        txtSearchCli.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        txtSearchCli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchCliKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearchCli)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearchCli, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
        );

        jPanel5.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 470, 250));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtTrocoInsufi)
                .addGap(1426, 1426, 1426))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 1412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 570, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTrocoInsufi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setBounds(0, 0, 1365, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_txtSearchKeyReleased

    private void searchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTableMouseClicked
        // TODO add your handling code here:
        sell_clicked();
    }//GEN-LAST:event_searchTableMouseClicked

    private void btnRemoveProdsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveProdsActionPerformed
        // TODO add your handling code here:
        remove_all();
    }//GEN-LAST:event_btnRemoveProdsActionPerformed

    private void btnRemoveProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveProdActionPerformed
        // TODO add your handling code here:
        remove_one();
        
    }//GEN-LAST:event_btnRemoveProdActionPerformed

    private void tableTempMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTempMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tableTempMouseClicked

    private void txtValRecKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValRecKeyReleased
        // TODO add your handling code here:
        troco();
    }//GEN-LAST:event_txtValRecKeyReleased

    private void btnFinComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinComActionPerformed
        // TODO add your handling code here:
        finish_sell();
    }//GEN-LAST:event_btnFinComActionPerformed

    private void btnCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCliActionPerformed
        // TODO add your handling code here:
        troco();
        perm_cli();
    }//GEN-LAST:event_btnCliActionPerformed

    private void txtSearchCliKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchCliKeyReleased
        // TODO add your handling code here:
        atual_cli();
    }//GEN-LAST:event_txtSearchCliKeyReleased

    private void searchCliTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchCliTableMouseClicked
        // TODO add your handling code here:
        cli_clicked();
    }//GEN-LAST:event_searchCliTableMouseClicked
    private void search(){
        String query = "Select productid as Id, prodname as Produto, prodval as Validade, prodamount as Quantidade, prodprice as Preco from prodtable where prodname like ? and prodamount>0";
        String reQuery = "select t.prodquant as Quantidade, p.prodname as Produto, p.prodprice as Preco, t.idvenda as IdVenda, p.productid as IdProd,p.prodvalue as vReal from temptable t join prodtable p on p.productid=t.productid";
        try{
            pst = connection.prepareStatement(query);
            pst.setString(1, txtSearch.getText()+"%");
            rs = pst.executeQuery();
            searchTable.setModel(DbUtils.resultSetToTableModel(rs));
            
            pst = connection.prepareStatement(reQuery);
            rs = pst.executeQuery();
            tableTemp.setModel(DbUtils.resultSetToTableModel(rs));
        }catch(SQLException e){
            
        }
    }
    private void sell_clicked(){
        int quantidade=0;
        String query_quant = "select prodamount from prodtable where productid= ?";
        String query="insert into temptable (idvenda,productid,prodquant) values (default,?,?)";
        try{
            int set = searchTable.getSelectedRow();
            pst = connection.prepareStatement(query_quant);
            pst.setString(1, searchTable.getModel().getValueAt(set, 0).toString());
            rs = pst.executeQuery();
            if(rs.next()){
                quantidade=Integer.parseInt(rs.getString(1));
                if(Integer.parseInt(txtProdQuant.getText())>quantidade){
                    JOptionPane.showMessageDialog(null, "Quantidade do produto não disponível!");
                } else {
                    pst = connection.prepareStatement(query);
                    pst.setString(1, searchTable.getModel().getValueAt(set, 0).toString());
                    if("0".equals(txtProdQuant.getText())){
                        pst.setString(2, "1");
                    } else {
                        pst.setString(2, txtProdQuant.getText());
                    }
                    int passou = pst.executeUpdate();
                    String reQuery = "select t.prodquant as Quantidade, p.prodname as Produto, p.prodprice as Preco, t.idvenda as IdVenda, p.productid as IdProd,p.prodvalue as vReal from temptable t join prodtable p on p.productid=t.productid";
                    if(passou>0){
                        pst = connection.prepareStatement(reQuery);
                        rs = pst.executeQuery();
                        tableTemp.setModel(DbUtils.resultSetToTableModel(rs));
                        quant=Integer.parseInt(txtProdQuant.getText());
                        txtProdQuant.setText("1");
                        pegar_id();
                        troco();
                    }
                }
            }
        }catch(SQLException e){
            
        }
                
    }
    private void remove_all(){
        String query_count = "select count(*) from temptable";
        String query_remove = "truncate temptable";
        try{
            pst = connection.prepareStatement(query_count);
            rs = pst.executeQuery();
            if(rs.next()){
                int linhas = Integer.parseInt(rs.getString(1));
                if(linhas<1){
                } else {
                    pst = connection.prepareStatement(query_remove);
                    int remover = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja remover todos produtos?","Atenção!",JOptionPane.YES_NO_OPTION);
                    if(remover == JOptionPane.YES_OPTION){
                        pst.executeUpdate();
                        String reQuery = "select t.prodquant as Quantidade, p.prodname as Produto, p.prodprice as Preco, t.idvenda as IdVenda, p.productid as IdProd,p.prodvalue as vReal from temptable t join prodtable p on p.productid=t.productid";
                        pst = connection.prepareStatement(reQuery);
                        rs = pst.executeQuery();
                        tableTemp.setModel(DbUtils.resultSetToTableModel(rs));
                        txtTotPrice.setText("0");
                        valorAtual=0;
                        troco();
                    }
                }
            }
        }catch(SQLException e){
            
        }
    }
    private void remove_one(){
        int row=-1;
        row = tableTemp.getSelectedRow();
        if(row==-1){
           
        } else {
            String remove_one = "delete from temptable where idvenda=?";
            try{
               pst = connection.prepareStatement(remove_one);
               pst.setString(1, tableTemp.getModel().getValueAt(row, 3).toString());
               int quantidade = (int) tableTemp.getModel().getValueAt(row, 0);
               double price = Double.valueOf(tableTemp.getModel().getValueAt(row, 2).toString().replace(",", "."));
               int passou = pst.executeUpdate();
               if(passou>0){
                    String reQuery = "select t.prodquant as Quantidade, p.prodname as Produto, p.prodprice as Preco, t.idvenda as IdVenda, p.productid as IdProd,p.prodvalue as vReal from temptable t join prodtable p on p.productid=t.productid";
                    pst = connection.prepareStatement(reQuery);
                    rs = pst.executeQuery();
                    tableTemp.setModel(DbUtils.resultSetToTableModel(rs));
                    valorAtual = Double.valueOf(txtTotPrice.getText().replace(",", "."));
                    valorAtual = valorAtual-(quantidade*price);
                    txtTotPrice.setText(df.format(valorAtual).replace(",", "."));
                    troco();
               }
            }catch(SQLException e){

            }
        }
    }
    private void pegar_id(){
        String lastQuery = "select * from temptable order by idvenda desc limit 1";
        try{
            pst = connection.prepareStatement(lastQuery);
            rs = pst.executeQuery();
            if(rs.next()){
                String last2Query = "select * from prodtable where productid=?";
                pst = connection.prepareStatement(last2Query);
                pst.setString(1, rs.getString(2));
                rs = pst.executeQuery();
                if(rs.next()){
                    valorAtual = valorAtual+(quant*(Double.parseDouble(rs.getString(5))));
                    txtTotPrice.setText(df.format(valorAtual).replace(",", "."));
                }
            }
        } catch(SQLException e){
            
        }
    }
    private void troco(){
        try{
            if(btnCli.isSelected()){
                btnFinCom.setEnabled(true);
                txtValInsu.setText("");
                double valorRec = Double.parseDouble(txtValRec.getText().replace(",", "."));
                txtValTroco.setText(df.format(valorAtual-valorRec).replace(",", "."));
                if("-0".equals(txtValTroco.getText())){
                    txtValTroco.setText("0");
                }
            } else {
                if(txtValRec.getText().isEmpty()||"0".equals(txtValRec.getText())){
                    txtValTroco.setText("0");
                } else {
                    txtValInsu.setText("");
                    double valorRec = Double.parseDouble(txtValRec.getText().replace(",", "."));
                    txtValTroco.setText(df.format(inverseNum*(valorAtual-valorRec)).replace(",", "."));
                    if(Double.valueOf(txtValTroco.getText())<0){
                        txtValInsu.setText("Valor Recebido insuficiente!");
                        btnFinCom.setEnabled(false);
                    } else {
                        btnFinCom.setEnabled(true);
                    }
                }
            }
        }catch(NumberFormatException e){
            
        }
    }
    private void remove_enter(){
        String query_remove = "truncate temptable";
        try{
            pst = connection.prepareStatement(query_remove);
            pst.executeUpdate();
            String reQuery = "select t.prodquant as Quantidade, p.prodname as Produto, p.prodprice as Preco, t.idvenda as IdVenda, p.productid as IdProd,p.prodvalue as vReal from temptable t join prodtable p on p.productid=t.productid";
            pst = connection.prepareStatement(reQuery);
            rs = pst.executeQuery();
            tableTemp.setModel(DbUtils.resultSetToTableModel(rs));
            txtTotPrice.setText("0");
            txtValRec.setText("0");
            txtValTroco.setText("0");
            valorAtual = 0;
        }catch(SQLException e){
            
        }
    }
    private void finish_sell(){
        String query = "select count(*) from temptable";
        double armazenador=0;
        try{
            pst = connection.prepareStatement(query);
            rs = pst.executeQuery();
            if(rs.next()){
                int num = Integer.parseInt(rs.getString(1));
                if("0".equals(rs.getString(1))){
                    
                } else {
                    String reQuery = "insert into saletabletrue (productid,prodmount,prodlucro,prodreal) values (?,?,?,?)";
                    for(int i=1; i<num; i++){
                        reQuery=reQuery+",(?,?,?,?)";  
                    }
                        pst = connection.prepareStatement(reQuery);
                        int linhas=0;
                        int aum=1;
                        for(int j=0; j<num; j++){
                            pst.setString((aum), tableTemp.getModel().getValueAt(linhas, 4).toString());
                            pst.setString((aum+1), tableTemp.getModel().getValueAt(linhas, 0).toString());
                            pst.setString((aum+2), String.valueOf(Integer.parseInt(tableTemp.getModel().getValueAt(linhas, 0).toString())*Double.parseDouble(tableTemp.getModel().getValueAt(linhas, 2).toString())));
                            pst.setString((aum+3), String.valueOf(Integer.parseInt(tableTemp.getModel().getValueAt(linhas, 0).toString())*Double.parseDouble(tableTemp.getModel().getValueAt(linhas, 5).toString())));
                            armazenador = armazenador + (Integer.parseInt(tableTemp.getModel().getValueAt(linhas, 0).toString())*Double.parseDouble(tableTemp.getModel().getValueAt(linhas, 2).toString()));
                            aum+=4;
                            linhas++;
                        }
                        if(btnCli.isSelected()){
                            if("".equals(txtIdCli.getText())){
                                JOptionPane.showMessageDialog(null,"Selecione o Cliente!");
                            } else {
                                double valorRec = Double.valueOf(txtValRec.getText());
                                String cliQuery = "insert into saletable (saleprice,idclient) values (?,?)";
                                String cliMsgQuery = "update clitable set climessage=?, totprice=totprice+? where idclient=?";
                                pst.executeUpdate();
                                pst = connection.prepareStatement(cliQuery);
                                pst.setString(1, String.valueOf(armazenador-valorRec));
                                pst.setString(2, txtIdCli.getText());
                                int passado = pst.executeUpdate();
                                if(passado>0){
                                    pst = connection.prepareStatement(cliMsgQuery);
                                    pst.setString(1, txtMsg.getText());
                                    pst.setString(2, String.valueOf(armazenador-valorRec));
                                    pst.setString(3, txtIdCli.getText());
                                    pst.executeUpdate();
                                    JOptionPane.showMessageDialog(null,"Venda realizada com sucesso!");
                                    btnCli.setSelected(false);
                                    perm_cli();
                                    decrease_quant();
                                    remove_enter();
                                }
                            }
                        } else {
                            double troco = Double.valueOf(txtValTroco.getText());
                            if(troco<0||"0".equals(txtValRec.getText())){
                                JOptionPane.showMessageDialog(null, "Valor recebido insuficiente!");
                            } else {
                                int passou = pst.executeUpdate();
                                if(passou>0){
                                    decrease_quant();
                                    remove_enter();
                                    JOptionPane.showMessageDialog(null,"Venda realizada com sucesso!");
                                }
                            }
                        }
                }
            }
        }catch(SQLException e){
            
        }
    }
    private void perm_cli(){
        if(btnCli.isSelected()){
            txtSearchCli.setEditable(true);
            searchCliTable.setEnabled(true);
            txtMsg.setEditable(true);
            atual_cli();
        } else {
            txtSearchCli.setEditable(false);
            searchCliTable.setEnabled(false);
            txtMsg.setEditable(false);
            txtIdCli.setText(null);
            searchCliTable.clearSelection();
            txtMsg.setText(null);
            txtName.setText(null);
            txtFone.setText(null);
            txtSearchCli.setText(null);
        }
    }
    private void atual_cli(){
        String query = "Select idclient as Id, clientname as Nome, clientfone as Telefone, climessage as Mensagem from clitable where clientname like ?";
        try{
            pst = connection.prepareStatement(query);
            pst.setString(1, txtSearchCli.getText()+"%");
            rs = pst.executeQuery();
            searchCliTable.setModel(DbUtils.resultSetToTableModel(rs));
        }catch(SQLException e){
            
        }
    }
    private void cli_clicked(){
        if(btnCli.isSelected()){
            int set = searchCliTable.getSelectedRow();
            txtIdCli.setText(searchCliTable.getModel().getValueAt(set, 0).toString());
            txtName.setText(searchCliTable.getModel().getValueAt(set, 1).toString());
            txtFone.setText(searchCliTable.getModel().getValueAt(set, 2).toString());
            txtMsg.setText(searchCliTable.getModel().getValueAt(set, 3).toString());
        } else {
            
        }
    }
    private void decrease_quant(){
        String query_count = "select count(*) from temptable";
        int count=0;
        int linhas=0;
        String id;
        String quanti;
        try{
            pst = connection.prepareStatement(query_count);
            rs = pst.executeQuery();
            if(rs.next()){
                String query_decrease = "update prodtable set prodamount=prodamount-? where productid=?";
                count = Integer.parseInt(rs.getString(1));
                for(int i=0; i<count; i++){
                    quanti = tableTemp.getModel().getValueAt(linhas, 0).toString();
                    id = tableTemp.getModel().getValueAt(linhas, 4).toString();
                    pst = connection.prepareStatement(query_decrease);
                    pst.setString(1, quanti);
                    pst.setString(2, id);
                    pst.executeUpdate();
                    linhas++;
                }
                search();
            }
        }catch(SQLException e){
            
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Nome;
    private javax.swing.JRadioButton btnCli;
    private javax.swing.JButton btnFinCom;
    private javax.swing.JButton btnRemoveProd;
    private javax.swing.JButton btnRemoveProds;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable searchCliTable;
    public static javax.swing.JTable searchTable;
    private javax.swing.JTable tableTemp;
    private javax.swing.JTextField txtFone;
    private javax.swing.JTextField txtIdCli;
    private javax.swing.JTextArea txtMsg;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtProdQuant;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearchCli;
    private javax.swing.JTextField txtTotPrice;
    private javax.swing.JLabel txtTrocoInsufi;
    private javax.swing.JLabel txtValInsu;
    private javax.swing.JTextField txtValRec;
    private javax.swing.JTextField txtValTroco;
    // End of variables declaration//GEN-END:variables
}
